name: CI
run-name: CI
on: [push, pull_request, workflow_dispatch]
env: 
  HOMEBREW_NO_ANALYTICS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
jobs:
  Build-Debian-x86_64:
    name: Build Spek-X (Debian, x86_64)
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo sed -i 's/jammy/kinetic/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y intltool libwxgtk3.2-dev wx-common libavcodec-dev libavformat-dev
      - name: Compile and bundle application
        run: |
          cd '${{ github.workspace }}'
          mkdir -p ./dist/debian/spek-x/usr ./dist/debian/spek-x/DEBIAN
          ./autogen.sh --prefix="$(realpath ./dist/debian/spek-x/usr)"
          make -j2 && make install
          cp ./dist/debian/control.ci ./dist/debian/spek-x/DEBIAN/control
          dpkg-deb --build dist/debian/spek-x
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Spek-X (Debian, x86_64)
          path: ${{ github.workspace }}/dist/debian/spek-x.deb

  Build-Windows-x64:
    name: Build Spek-X (Windows, x64)
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
      - name: Install dependencies
        run: |
          cd '${{ github.workspace }}' && ./dist/win/install_deps.sh
      - name: Compile and bundle application
        run: |
          cd '${{ github.workspace }}' && ./dist/win/bundle.sh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Spek-X (Windows, x64)
          path: ${{ github.workspace }}/dist/win/Spek/Spek.zip

  Build-macOS-Intel:
    name: Build Spek-X (macOS, Intel)
    runs-on: macos-12
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          eval "$(brew shellenv)"
          brew unlink perl
          cd '${{ github.workspace }}' && ./dist/osx/install_deps.sh
      - name: Compile and bundle application
        run: |
          eval "$(brew shellenv)"
          cd '${{ github.workspace }}' && ./dist/osx/bundle.sh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Spek-X (macOS, Intel)
          path: ${{ github.workspace }}/dist/osx/Spek.tgz

  Build-macOS-AppleSilicon:
    name: Build Spek-X (macOS, Apple Silicon)
    runs-on: macos-12
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          eval "$(brew shellenv)"
          brew unlink perl
          cd '${{ github.workspace }}' && ./dist/osx/cross/install_deps.sh i_am_ci
      - name: Compile and bundle application
        run: |
          eval "$(brew shellenv)"
          cd '${{ github.workspace }}' && ./dist/osx/cross/bundle.sh i_am_ci
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Spek-X (macOS, Apple Silicon)
          path: ${{ github.workspace }}/dist/osx/Spek.tgz

  Unit-Test:
    name: Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo sed -i 's/jammy/kinetic/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y intltool libwxgtk3.2-dev wx-common libavcodec-dev libavformat-dev
      - name: Run tests
        run: |
          ./autogen.sh && make check
